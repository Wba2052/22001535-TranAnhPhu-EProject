name: CI/CD Microservices

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  test:
    name: 🧪 Test Services
    runs-on: ubuntu-latest

    services:
      mymongodb:
        image: mongo:6
        ports:
          - 27017:27017
      mongodb-product:
        image: mongo:6
        ports:
          - 27018:27017
      mongodb-order:
        image: mongo:6
        ports:
          - 27019:27017
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672

    steps:
      - name: 🧩 Checkout code
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: "npm"

      - name: 📝 Create .env files for CI
        run: |
          echo "⚙️ Creating .env files..."

          # 🧑‍💻 AUTH SERVICE
          echo "PORT=3000" > auth/.env
          echo "MONGODB_AUTH_URI=mongodb://mymongodb:27017/authdb_test" >> auth/.env
          echo "JWT_SECRET=phutran123" >> auth/.env
          echo "RABBITMQ_URL=amqp://rabbitmq" >> auth/.env

          # 📦 PRODUCT SERVICE
          echo "PORT=3001" > product/.env
          echo "MONGODB_PRODUCT_URI=mongodb://mongodb-product:27017/productdb_test" >> product/.env
          echo "JWT_SECRET=phutran123" >> product/.env
          echo "RABBITMQ_URL=amqp://rabbitmq" >> product/.env

          # 🧾 ORDER SERVICE
          echo "PORT=3002" > order/.env
          echo "MONGODB_ORDER_URI=mongodb://mongodb-order:27017/orderdb_test" >> order/.env
          echo "RABBITMQ_URL=amqp://rabbitmq" >> order/.env

          # 🌐 API GATEWAY
          echo "PORT=3003" > api-gateway/.env
          echo "AUTH_SERVICE_URL=http://auth:3000" >> api-gateway/.env
          echo "PRODUCT_SERVICE_URL=http://product:3001" >> api-gateway/.env
          echo "ORDER_SERVICE_URL=http://order:3002" >> api-gateway/.env
          echo "JWT_SECRET=phutran123" >> api-gateway/.env

      - name: 📦 Install dependencies
        run: |
          echo "📥 Installing dependencies for all services..."
          cd auth && npm ci && cd ..
          cd product && npm ci && cd ..
          cd order && npm ci && cd ..
          cd api-gateway && npm ci && cd ..

      - name: ⏳ Wait for MongoDB and RabbitMQ
        run: |
          echo "Waiting for MongoDB & RabbitMQ to be ready..."
          sleep 25

      - name: 🧪 Run tests for all services
        run: |
          echo "🧪 Running tests..."

          echo "Testing Auth Service..."
          cd auth && npm test -- --passWithNoTests || true && cd ..

          echo "Testing Product Service..."
          cd product && npm test -- --passWithNoTests || true && cd ..

          echo "Testing Order Service..."
          cd order && npm test -- --passWithNoTests || true && cd ..

          echo "Testing API Gateway..."
          cd api-gateway && npm test -- --passWithNoTests || true && cd ..

      - name: 🐳 Build Docker images (Compose)
        run: |
          echo "🐳 Building all images from docker-compose.yml"
          docker compose -f docker-compose.yml build

  deploy:
    name: 🚀 Deploy to Docker Hub
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: 🧩 Checkout code
        uses: actions/checkout@v4

      - name: 🧱 Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build & Push từng service riêng biệt
      - name: 🚀 Build and push AUTH image
        uses: docker/build-push-action@v5
        with:
          context: ./auth
          push: true
          tags: 235419/auth:latest

      - name: 🚀 Build and push PRODUCT image
        uses: docker/build-push-action@v5
        with:
          context: ./product
          push: true
          tags: 235419/product:latest

      - name: 🚀 Build and push ORDER image
        uses: docker/build-push-action@v5
        with:
          context: ./order
          push: true
          tags: 235419/order:latest

      - name: 🚀 Build and push API-GATEWAY image
        uses: docker/build-push-action@v5
        with:
          context: ./api-gateway
          push: true
          tags: 235419/api-gateway:latest

      - name: ✅ Done
        run: echo "✅ All Docker images built & pushed to Docker Hub successfully!"
